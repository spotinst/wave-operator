
# Image URL to use all building/pushing image targets
IMG ?= waveoperator:latest

# Produce multiply-versioned CRDs
CRD_OPTIONS ?= "crd"

# Get the currently used golang install path (in GOPATH/bin, unless GOBIN is set)
ifeq (,$(shell go env GOBIN))
GOBIN=$(shell go env GOPATH)/bin
else
GOBIN=$(shell go env GOBIN)
endif

all: manager


test: generate fmt vet manifests  ## Run tests
	go test ./... -coverprofile cover.out


manager: generate fmt vet  ## Build manager binary
	go build -o bin/manager main.go


run: generate fmt vet manifests  ## Run against the configured Kubernetes cluster in ~/.kube/config
	go run ./main.go


install: manifests  ## Install CRDs into a cluster
	kustomize build config/crd | kubectl apply -f -


uninstall: manifests  ## Uninstall CRDs from a cluster
	kustomize build config/crd | kubectl delete -f -


deploy: manifests  ## Deploy controller in the configured Kubernetes cluster in ~/.kube/config
	cd config/manager && kustomize edit set image controller=${IMG}
	kustomize build config/default | kubectl apply -f -


manifests: controller-gen  ## Generate manifests e.g. CRD, RBAC etc.
	$(CONTROLLER_GEN) $(CRD_OPTIONS) rbac:roleName=manager-role webhook paths="./..." output:crd:artifacts:config=config/crd/bases


fmt:  ## Run go fmt against code
	go fmt ./...


vet:  ## Run go vet against code
	go vet ./...


generate: controller-gen  ## Generate code
	$(CONTROLLER_GEN) object:headerFile="hack/boilerplate.go.txt" paths="./..."


docker-build: test  ## Build the docker image
	docker build . -t ${IMG}


docker-push:  ## Push the docker image
	docker push ${IMG}


# download controller-gen if necessary
controller-gen:  ## find or download controller-gen
ifeq (, $(shell which controller-gen))
	@{ \
	set -e ;\
	CONTROLLER_GEN_TMP_DIR=$$(mktemp -d) ;\
	cd $$CONTROLLER_GEN_TMP_DIR ;\
	go mod init tmp ;\
	go get sigs.k8s.io/controller-tools/cmd/controller-gen@v0.2.5 ;\
	rm -rf $$CONTROLLER_GEN_TMP_DIR ;\
	}
CONTROLLER_GEN=$(GOBIN)/controller-gen
else
CONTROLLER_GEN=$(shell which controller-gen)
endif
