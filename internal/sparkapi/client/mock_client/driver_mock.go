// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/spotinst/wave-operator/internal/sparkapi/client (interfaces: DriverClient)

// Package mock_client is a generated GoMock package.
package mock_client

import (
	gomock "github.com/golang/mock/gomock"
	client "github.com/spotinst/wave-operator/internal/sparkapi/client"
	reflect "reflect"
)

// MockDriverClient is a mock of DriverClient interface
type MockDriverClient struct {
	ctrl     *gomock.Controller
	recorder *MockDriverClientMockRecorder
}

// MockDriverClientMockRecorder is the mock recorder for MockDriverClient
type MockDriverClientMockRecorder struct {
	mock *MockDriverClient
}

// NewMockDriverClient creates a new mock instance
func NewMockDriverClient(ctrl *gomock.Controller) *MockDriverClient {
	mock := &MockDriverClient{ctrl: ctrl}
	mock.recorder = &MockDriverClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockDriverClient) EXPECT() *MockDriverClientMockRecorder {
	return m.recorder
}

// GetAllExecutors mocks base method
func (m *MockDriverClient) GetAllExecutors(arg0 string) ([]client.Executor, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllExecutors", arg0)
	ret0, _ := ret[0].([]client.Executor)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllExecutors indicates an expected call of GetAllExecutors
func (mr *MockDriverClientMockRecorder) GetAllExecutors(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllExecutors", reflect.TypeOf((*MockDriverClient)(nil).GetAllExecutors), arg0)
}

// GetApplication mocks base method
func (m *MockDriverClient) GetApplication(arg0 string) (*client.Application, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetApplication", arg0)
	ret0, _ := ret[0].(*client.Application)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetApplication indicates an expected call of GetApplication
func (mr *MockDriverClientMockRecorder) GetApplication(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetApplication", reflect.TypeOf((*MockDriverClient)(nil).GetApplication), arg0)
}

// GetEnvironment mocks base method
func (m *MockDriverClient) GetEnvironment(arg0 string) (*client.Environment, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEnvironment", arg0)
	ret0, _ := ret[0].(*client.Environment)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetEnvironment indicates an expected call of GetEnvironment
func (mr *MockDriverClientMockRecorder) GetEnvironment(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEnvironment", reflect.TypeOf((*MockDriverClient)(nil).GetEnvironment), arg0)
}

// GetMetrics mocks base method
func (m *MockDriverClient) GetMetrics() (client.Metrics, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMetrics")
	ret0, _ := ret[0].(client.Metrics)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetMetrics indicates an expected call of GetMetrics
func (mr *MockDriverClientMockRecorder) GetMetrics() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMetrics", reflect.TypeOf((*MockDriverClient)(nil).GetMetrics))
}

// GetStages mocks base method
func (m *MockDriverClient) GetStages(arg0 string) ([]client.Stage, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetStages", arg0)
	ret0, _ := ret[0].([]client.Stage)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetStages indicates an expected call of GetStages
func (mr *MockDriverClientMockRecorder) GetStages(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStages", reflect.TypeOf((*MockDriverClient)(nil).GetStages), arg0)
}

// GetStreamingStatistics mocks base method
func (m *MockDriverClient) GetStreamingStatistics(arg0 string) (*client.StreamingStatistics, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetStreamingStatistics", arg0)
	ret0, _ := ret[0].(*client.StreamingStatistics)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetStreamingStatistics indicates an expected call of GetStreamingStatistics
func (mr *MockDriverClientMockRecorder) GetStreamingStatistics(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStreamingStatistics", reflect.TypeOf((*MockDriverClient)(nil).GetStreamingStatistics), arg0)
}
